package action;

import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.opensymphony.xwork2.ActionSupport;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import model.Student;


public class HelloAction extends ActionSupport {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String name;
	private String branch;
	private int percentage;
	private int phone;
	private String email;
	
	private ArrayList<Student> students;

	private Student student;
	
	public String execute() throws SQLException, IOException {
		InputStream inputStream = Resources.getResourceAsStream("SqlMapConfig.xml");
		SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);
		SqlSession session = sqlSessionFactory.openSession();
		
		Student student = new Student(name,branch,percentage,phone,email);
		session.insert("Student.insertStudent", student);

		session.commit();
		session.close();
		
		return "success";
	}
	
	public String getAllStudent() throws SQLException, IOException {
		  Reader reader = Resources.getResourceAsReader("SqlMapConfig.xml");
	      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);		
	      SqlSession session = sqlSessionFactory.openSession();
	      
	      //select contact all contacts		
	      students = (ArrayList) session.selectList("Student.getAll");

			
	      System.out.println("Records Read Successfully ");          
	      session.commit();   
	      session.close();		
	      return "success";
	}
	
	
	public String getStudentById(int id)throws SQLException, IOException {
		  Reader reader = Resources.getResourceAsReader("SqlMapConfig.xml");
	      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);		
	      SqlSession session = sqlSessionFactory.openSession();      
		  
	      //select a particular student  by  id	
	      Student student = (Student) session.selectOne("Student.getById", id); 
		  
	      //Print the student details
	      System.out.println(student.getId());
	      System.out.println(student.getName());
	      System.out.println(student.getBranch());
	      System.out.println(student.getPercentage());      
	      System.out.println(student.getEmail());      
	      System.out.println(student.getPhone());
			
	      session.commit();
	      session.close();
	      return "success";
	}
	
	
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}


	public String getBranch() {
		return branch;
	}


	public void setBranch(String branch) {
		this.branch = branch;
	}


	public int getPercentage() {
		return percentage;
	}


	public void setPercentage(int percentage) {
		this.percentage = percentage;
	}


	public int getPhone() {
		return phone;
	}


	public void setPhone(int phone) {
		this.phone = phone;
	}


	public String getEmail() {
		return email;
	}


	public void setEmail(String email) {
		this.email = email;
	}

	public ArrayList<Student> getStudents() {
		return students;
	}

	public void setStudents(ArrayList<Student> students) {
		this.students = students;
	}
	
	
	
}
